############## mod 8 lesson 1 ##################
################ Libraries ################### 

Get-Process explorer : Query for the explorer process
(Get-Process explorer).Modules : To view the loaded modules for the explorer process,

Run the following commands to find the processes for the specified module:
$processes = Get-Process
foreach($process in $processes) {
 foreach($module in $process.Modules){
  if ($module.ModuleName -eq 'advapi32.dll'){
   $process
  }
 }
}


$credentials = Get-Credential : Run the following command to store the credentials for the remote computer
Invoke-Command -Credential $credentials -ComputerName 'cda-dc' -ScriptBlock {Get-Process} : Use Invoke-Command to query the currently running processes on the remote computer
$processes = Invoke-Command -Credential $credentials -ComputerName 'cda-dc' -ScriptBlock {Get-Process} : further analyze the processes, use the following command to copy the collection locally

Enter the following commands to filter the processes for specific loaded modules

foreach($process in $processes) {
 foreach($module in $process.Modules){
  if ($module -like '*advapi32.dll*'){
   $process
  }
 }
}

Compiling and Executing a Library for AppInit_DLLs ##################

Compile the library using MinGW’s GNU Compiler Collection (GCC
gcc -shared -o dllmain.dll dllmain.cpp : Compile the library using MinGW’s GNU Compiler Collection (GCC):

GCC is executed using the following parameters:
- shared: Indicates output should be a shared library
- o: Indicates the path to the output file (dllmain.dll in this case)
- unnamed parameters: Input files to be used (dllmain.cpp in this case)

Detection #######################

the following PowerShell commands determine if the current system is configured with AppInit DLLs:
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows" -Name "LoadAppInit_DLLs"
Get-ItemProperty -Path "HKLM:\SOFTWARE\Wow6432Node\Microsoft\Windows NT\CurrentVersion\Windows" -Name "LoadAppInit_DLLs"

from before, If any of these commands returns a 1, then the system is configured to use AppInit. The library or libraries loaded are discerned via:
Get-ItemProperty -Path "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Windows" -Name "AppInit_DLLs"

############## mod 8 lesson 2 ##################
################ Libraries ################### 

taskkill /PID 4376 /F : kills task base of pid
taskkill /IM notepad.exe /F : kills task base off of process name


Get-Process -name "firefox"
Get-Process -id 252
Get-Process -name exp*,pow*
Stop-Process -name firefox
Start-Process -FilePath "notepad.exe"
Stop-Process -id 212
Get-Process -name powershell -IncludeUserName

Run the following command to see which parent process ID spawns the running processes
important : Get-CimInstance -Class Win32_Process | Select-Object ProcessId,ProcessName,ParentProcessId

Print the WMI object for the powershell.exe process with the command
Get-CimInstance -class Win32_Process -filter "name = 'powershell.exe'" | Format-List *

Use the WMI GetOwner method with the command
Get-CimInstance -class Win32_Process -filter "name = 'powershell.exe'" | Invoke-CimMethod -MethodName GetOwner | Format-List *


invoke-command cda-acct-1, cda-acct-2, cda-acct-3 -scriptblock {get-process powershell -module}


Get-ciminstance -class win32_process -filter "name = 'powershell.exe'" -computername cda-acct-1 | select processname, processid, 
parentprocessid


Get-ciminstance -class win32_process -filter "processid = '2872'" -computer cda-acct-1 | select processname, processid


Get-ciminstance -class win32_process -filter "name = 'powershell.exe'" -computername cda-acct-1 | format-list *


invoke-command -computername cda-acct-1 -scriptblock {get-process -name powershell -includeusername}


invoke-command -computername cda-acct-1 -scriptblock {(get-process -name powershell -includeusername).username}

############## mod 8 lesson 3 ##################
################ Windows API ################### 

tasklist /fi "imagename eq explorer.exe" /m : List all libraries loaded for the explorer.exe process
tasklist /s 172.16.3.2 /u Administrator /fi "imagename eq wmiprvse.exe" /m : List all libraries loaded for the wmiprvse.exe process on a remote computer
Get-Process “explorer” | Select-Object -ExpandProperty Modules -ErrorAction SilentlyContinue | Format-Table -Autosize :  view DLLs loaded by the explorer.exe process on the local machine,
listdlls -h : pen the help menu for the utility with the command

List all DLLs loaded by cmd.exe with the following command
listdlls cmd
listdlls -r cmd

List all processes that have loaded the DLL advapi32.dll with the following command:
listdlls -d advapi32.dll | more










































